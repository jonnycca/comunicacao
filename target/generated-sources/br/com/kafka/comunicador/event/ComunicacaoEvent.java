/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package br.com.kafka.comunicador.event;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ComunicacaoEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 7985207513469642319L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ComunicacaoEvent\",\"namespace\":\"br.com.kafka.comunicador.event\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"dataAgendamento\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"tipoComunicacao\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"destinatario\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"mensagem\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ComunicacaoEvent> ENCODER =
      new BinaryMessageEncoder<ComunicacaoEvent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ComunicacaoEvent> DECODER =
      new BinaryMessageDecoder<ComunicacaoEvent>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<ComunicacaoEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<ComunicacaoEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ComunicacaoEvent>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this ComunicacaoEvent to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a ComunicacaoEvent from a ByteBuffer. */
  public static ComunicacaoEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence id;
  @Deprecated public java.lang.CharSequence dataAgendamento;
  @Deprecated public java.lang.CharSequence tipoComunicacao;
  @Deprecated public java.lang.CharSequence destinatario;
  @Deprecated public java.lang.CharSequence mensagem;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ComunicacaoEvent() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param dataAgendamento The new value for dataAgendamento
   * @param tipoComunicacao The new value for tipoComunicacao
   * @param destinatario The new value for destinatario
   * @param mensagem The new value for mensagem
   */
  public ComunicacaoEvent(java.lang.CharSequence id, java.lang.CharSequence dataAgendamento, java.lang.CharSequence tipoComunicacao, java.lang.CharSequence destinatario, java.lang.CharSequence mensagem) {
    this.id = id;
    this.dataAgendamento = dataAgendamento;
    this.tipoComunicacao = tipoComunicacao;
    this.destinatario = destinatario;
    this.mensagem = mensagem;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return dataAgendamento;
    case 2: return tipoComunicacao;
    case 3: return destinatario;
    case 4: return mensagem;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: dataAgendamento = (java.lang.CharSequence)value$; break;
    case 2: tipoComunicacao = (java.lang.CharSequence)value$; break;
    case 3: destinatario = (java.lang.CharSequence)value$; break;
    case 4: mensagem = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'dataAgendamento' field.
   * @return The value of the 'dataAgendamento' field.
   */
  public java.lang.CharSequence getDataAgendamento() {
    return dataAgendamento;
  }

  /**
   * Sets the value of the 'dataAgendamento' field.
   * @param value the value to set.
   */
  public void setDataAgendamento(java.lang.CharSequence value) {
    this.dataAgendamento = value;
  }

  /**
   * Gets the value of the 'tipoComunicacao' field.
   * @return The value of the 'tipoComunicacao' field.
   */
  public java.lang.CharSequence getTipoComunicacao() {
    return tipoComunicacao;
  }

  /**
   * Sets the value of the 'tipoComunicacao' field.
   * @param value the value to set.
   */
  public void setTipoComunicacao(java.lang.CharSequence value) {
    this.tipoComunicacao = value;
  }

  /**
   * Gets the value of the 'destinatario' field.
   * @return The value of the 'destinatario' field.
   */
  public java.lang.CharSequence getDestinatario() {
    return destinatario;
  }

  /**
   * Sets the value of the 'destinatario' field.
   * @param value the value to set.
   */
  public void setDestinatario(java.lang.CharSequence value) {
    this.destinatario = value;
  }

  /**
   * Gets the value of the 'mensagem' field.
   * @return The value of the 'mensagem' field.
   */
  public java.lang.CharSequence getMensagem() {
    return mensagem;
  }

  /**
   * Sets the value of the 'mensagem' field.
   * @param value the value to set.
   */
  public void setMensagem(java.lang.CharSequence value) {
    this.mensagem = value;
  }

  /**
   * Creates a new ComunicacaoEvent RecordBuilder.
   * @return A new ComunicacaoEvent RecordBuilder
   */
  public static br.com.kafka.comunicador.event.ComunicacaoEvent.Builder newBuilder() {
    return new br.com.kafka.comunicador.event.ComunicacaoEvent.Builder();
  }

  /**
   * Creates a new ComunicacaoEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ComunicacaoEvent RecordBuilder
   */
  public static br.com.kafka.comunicador.event.ComunicacaoEvent.Builder newBuilder(br.com.kafka.comunicador.event.ComunicacaoEvent.Builder other) {
    return new br.com.kafka.comunicador.event.ComunicacaoEvent.Builder(other);
  }

  /**
   * Creates a new ComunicacaoEvent RecordBuilder by copying an existing ComunicacaoEvent instance.
   * @param other The existing instance to copy.
   * @return A new ComunicacaoEvent RecordBuilder
   */
  public static br.com.kafka.comunicador.event.ComunicacaoEvent.Builder newBuilder(br.com.kafka.comunicador.event.ComunicacaoEvent other) {
    return new br.com.kafka.comunicador.event.ComunicacaoEvent.Builder(other);
  }

  /**
   * RecordBuilder for ComunicacaoEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ComunicacaoEvent>
    implements org.apache.avro.data.RecordBuilder<ComunicacaoEvent> {

    private java.lang.CharSequence id;
    private java.lang.CharSequence dataAgendamento;
    private java.lang.CharSequence tipoComunicacao;
    private java.lang.CharSequence destinatario;
    private java.lang.CharSequence mensagem;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(br.com.kafka.comunicador.event.ComunicacaoEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.dataAgendamento)) {
        this.dataAgendamento = data().deepCopy(fields()[1].schema(), other.dataAgendamento);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.tipoComunicacao)) {
        this.tipoComunicacao = data().deepCopy(fields()[2].schema(), other.tipoComunicacao);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.destinatario)) {
        this.destinatario = data().deepCopy(fields()[3].schema(), other.destinatario);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.mensagem)) {
        this.mensagem = data().deepCopy(fields()[4].schema(), other.mensagem);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing ComunicacaoEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(br.com.kafka.comunicador.event.ComunicacaoEvent other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.dataAgendamento)) {
        this.dataAgendamento = data().deepCopy(fields()[1].schema(), other.dataAgendamento);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.tipoComunicacao)) {
        this.tipoComunicacao = data().deepCopy(fields()[2].schema(), other.tipoComunicacao);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.destinatario)) {
        this.destinatario = data().deepCopy(fields()[3].schema(), other.destinatario);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.mensagem)) {
        this.mensagem = data().deepCopy(fields()[4].schema(), other.mensagem);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public br.com.kafka.comunicador.event.ComunicacaoEvent.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public br.com.kafka.comunicador.event.ComunicacaoEvent.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'dataAgendamento' field.
      * @return The value.
      */
    public java.lang.CharSequence getDataAgendamento() {
      return dataAgendamento;
    }

    /**
      * Sets the value of the 'dataAgendamento' field.
      * @param value The value of 'dataAgendamento'.
      * @return This builder.
      */
    public br.com.kafka.comunicador.event.ComunicacaoEvent.Builder setDataAgendamento(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.dataAgendamento = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'dataAgendamento' field has been set.
      * @return True if the 'dataAgendamento' field has been set, false otherwise.
      */
    public boolean hasDataAgendamento() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'dataAgendamento' field.
      * @return This builder.
      */
    public br.com.kafka.comunicador.event.ComunicacaoEvent.Builder clearDataAgendamento() {
      dataAgendamento = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'tipoComunicacao' field.
      * @return The value.
      */
    public java.lang.CharSequence getTipoComunicacao() {
      return tipoComunicacao;
    }

    /**
      * Sets the value of the 'tipoComunicacao' field.
      * @param value The value of 'tipoComunicacao'.
      * @return This builder.
      */
    public br.com.kafka.comunicador.event.ComunicacaoEvent.Builder setTipoComunicacao(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.tipoComunicacao = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'tipoComunicacao' field has been set.
      * @return True if the 'tipoComunicacao' field has been set, false otherwise.
      */
    public boolean hasTipoComunicacao() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'tipoComunicacao' field.
      * @return This builder.
      */
    public br.com.kafka.comunicador.event.ComunicacaoEvent.Builder clearTipoComunicacao() {
      tipoComunicacao = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'destinatario' field.
      * @return The value.
      */
    public java.lang.CharSequence getDestinatario() {
      return destinatario;
    }

    /**
      * Sets the value of the 'destinatario' field.
      * @param value The value of 'destinatario'.
      * @return This builder.
      */
    public br.com.kafka.comunicador.event.ComunicacaoEvent.Builder setDestinatario(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.destinatario = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'destinatario' field has been set.
      * @return True if the 'destinatario' field has been set, false otherwise.
      */
    public boolean hasDestinatario() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'destinatario' field.
      * @return This builder.
      */
    public br.com.kafka.comunicador.event.ComunicacaoEvent.Builder clearDestinatario() {
      destinatario = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'mensagem' field.
      * @return The value.
      */
    public java.lang.CharSequence getMensagem() {
      return mensagem;
    }

    /**
      * Sets the value of the 'mensagem' field.
      * @param value The value of 'mensagem'.
      * @return This builder.
      */
    public br.com.kafka.comunicador.event.ComunicacaoEvent.Builder setMensagem(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.mensagem = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'mensagem' field has been set.
      * @return True if the 'mensagem' field has been set, false otherwise.
      */
    public boolean hasMensagem() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'mensagem' field.
      * @return This builder.
      */
    public br.com.kafka.comunicador.event.ComunicacaoEvent.Builder clearMensagem() {
      mensagem = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ComunicacaoEvent build() {
      try {
        ComunicacaoEvent record = new ComunicacaoEvent();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.dataAgendamento = fieldSetFlags()[1] ? this.dataAgendamento : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.tipoComunicacao = fieldSetFlags()[2] ? this.tipoComunicacao : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.destinatario = fieldSetFlags()[3] ? this.destinatario : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.mensagem = fieldSetFlags()[4] ? this.mensagem : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ComunicacaoEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<ComunicacaoEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ComunicacaoEvent>
    READER$ = (org.apache.avro.io.DatumReader<ComunicacaoEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
